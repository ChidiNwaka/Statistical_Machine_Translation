function outSentence = preprocess( inSentence, language )
%
%  preprocess
%
%  This function preprocesses the input text according to language-specific rules.
%  Specifically, we separate contractions according to the source language, convert
%  all tokens to lower-case, and separate end-of-sentence punctuation 
%
%  INPUTS:
%       inSentence     : (string) the original sentence to be processed 
%                                 (e.g., a line from the Hansard)
%       language       : (string) either 'e' (English) or 'f' (French) 
%                                 according to the language of inSentence
%
%  OUTPUT:
%       outSentence    : (string) the modified sentence
%
%  Template (c) 2011 Frank Rudzicz 

% global CSC401_A2_DEFNS 
  global CSC401_A2_DEFNS %= './helloWorld.e'
  
  % first, convert the input sentence to lower-case and add sentence marks 
  inSentence = [CSC401_A2_DEFNS.SENTSTART ' ' lower( inSentence ) ' ' CSC401_A2_DEFNS.SENTEND];

  % trim whitespaces down 
  inSentence = regexprep( inSentence, '\s+', ' '); 

  % initialize outSentence
  outSentence = inSentence;
%   disp(outSentence)
  % perform language-agnostic changes
  % TODO: your code here
  %    e.g., outSentence = regexprep( outSentence, 'TODO', 'TODO');

  outSentence = regexprep( outSentence, '(\w*)[(,)|(:)|(;)|(()|())|((_))|(-)|(!)|(+)|(-)|(<)|(>)|(=)|('')|(")]', '$1 $2');
  outSentence = regexprep( outSentence, '[(,)|(:)|(;)|(()|())|((_))|(-)|(!)|(+)|(-)|(<)|(>)|(=)|('')|(")](\w*)', '$1 $2');
 
  outSentence = regexprep( outSentence, '\s+', ' '); 

  switch language
   case 'e'
    % TODO: your code here
    %'([^\s]n\'t|[^\s]\'s|[^\s]\'re|[^\s]s\'|[^\s]\'m|[^\s]\'ve|[^\s]\'d|[^\s]\'ll)'
    outSentence = regexprep(outSentence, '(n''t)', ' n''t')
    outSentence = regexprep(outSentence, '(''s)', ' ''s')
%     outSentence = regexprep(outSentence, 
%     outSentence = regexprep(outSentence, 
   case 'f'
    % TODO: your code here
   
    result = regexprep(outSentence, '([l|t|j|qu])('')', '$1$2 ')
    outSentence = result
    disp(outSentence)
    %sample sentence: l'election je t'aime j'ai qu'on qu'll puissqu'on lorsqu'il biscif'el  
    
  end

  % change unpleasant characters to codes that can be keys in dictionaries
  
  outSentence = convertSymbols( outSentence );

